@using Database.Entities;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
    <li class="nav-item">
        @*<a class="nav-link text-dark" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>*@
        @Html.ActionLink($"Hello {User.Identity.Name}!", "Manage", "Account", null, new { @class = "nav-link text-dark" })

    </li>
        <li class="nav-item">
            @*<form class="form-inline" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>*@
            @using (@Html.BeginForm("Logout", "Account"))
            {
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            }
        </li>
    }
    else
    {
        <li class="nav-item">
            @Html.ActionLink("Register", "Register", "Account", null, new { @class = "nav-link text-dark" })
        </li>
        <li class="nav-item">
            @Html.ActionLink("Login", "Login", "Account", null, new { @class = "nav-link text-dark" })
        </li>
    }
</ul>
